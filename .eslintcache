[{"C:\\Users\\Ivan\\Desktop\\checkout\\src\\index.tsx":"1","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Shop.tsx":"2","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Menu.tsx":"3","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Cart.tsx":"4","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\HomePage.tsx":"5","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Footer.tsx":"6","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\firebase\\fire.tsx":"7","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Item.tsx":"8","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\CartItem.tsx":"9","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Summary.tsx":"10","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Order.tsx":"11","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Checkout.jsx":"12"},{"size":284,"mtime":1610914292849,"results":"13","hashOfConfig":"14"},{"size":5156,"mtime":1611226192931,"results":"15","hashOfConfig":"14"},{"size":1082,"mtime":1611099613256,"results":"16","hashOfConfig":"14"},{"size":7666,"mtime":1611241168193,"results":"17","hashOfConfig":"14"},{"size":744,"mtime":1611184100959,"results":"18","hashOfConfig":"14"},{"size":167,"mtime":1611099430719,"results":"19","hashOfConfig":"14"},{"size":476,"mtime":1610879870621,"results":"20","hashOfConfig":"14"},{"size":911,"mtime":1611167645536,"results":"21","hashOfConfig":"14"},{"size":2162,"mtime":1611179912899,"results":"22","hashOfConfig":"14"},{"size":2679,"mtime":1611241270347,"results":"23","hashOfConfig":"14"},{"size":2169,"mtime":1611241847714,"results":"24","hashOfConfig":"14"},{"size":4145,"mtime":1611226091730,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wrh7lt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\Ivan\\Desktop\\checkout\\src\\index.tsx",[],["56","57"],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Shop.tsx",["58","59","60"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport fire from '../firebase/fire';\r\nimport Menu from '../smaller components/Menu';\r\nimport HomePage from './HomePage';\r\nimport Cart from './Cart';\r\nimport Checkout from './Checkout';\r\nimport Order from './Order';\r\nimport Footer from '../smaller components/Footer';\r\nimport './Shop.scss';\r\n\r\ninterface Item {\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  quantity?: number;\r\n}\r\n\r\nconst Shop = () => {\r\n  const [cart, setCart] = useState<Item[]>([]);\r\n  const [items, setItems] = useState([]);\r\n  const [total, setTotal] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [adress, setAdress] = useState('');\r\n  const [promotions, setPromotions] = useState('');\r\n  const [numberOfItems, setNumberOfItems] = useState(0);\r\n  const [approvedCode, setApprovedCode] = useState<any>([]);\r\n  const [buyerInfo, setBuyerInfo] = useState(0);\r\n  const itemsRef = fire.database().ref('/items');\r\n  const promotionsRef = fire.database().ref('/promotions');\r\n\r\n  //Download podataka kod učitavanja stranice\r\n  useEffect(() => {\r\n    const gotItems = (data: any) => {\r\n      const itemsFromServer: any = [];\r\n      const dataa = data.val();\r\n      Object.keys(dataa).forEach((item: any) =>\r\n        itemsFromServer.push(dataa[item])\r\n      );\r\n      setItems(itemsFromServer);\r\n    };\r\n    //Download itemsa sa firebase-a i spremanje u state\r\n    const gotPromotions = (data: any) => {\r\n      const itemsFromServer: any = [];\r\n      const dataa = data.val();\r\n      Object.keys(dataa).forEach((item: any) =>\r\n        itemsFromServer.push(dataa[item])\r\n      );\r\n      setPromotions(itemsFromServer);\r\n    };\r\n    //Download promotionsa sa firebase-a i spremanje u state\r\n    const errDataLoad = (err: any) => {\r\n      console.log(err);\r\n    };\r\n    promotionsRef.on('value', gotPromotions, errDataLoad);\r\n    itemsRef.on('value', gotItems, errDataLoad);\r\n  }, []);\r\n\r\n  //Dodaj proizvod u košaricu\r\n  const onAddToCart = (name: string) => {\r\n    const existInCart: any = cart.find((item: any) => item.name === name);\r\n    const newItemInCart: any = items.filter((item: any) => item.name === name);\r\n    if (existInCart) {\r\n      setCart(\r\n        cart.map((item: any) =>\r\n          item.name === name\r\n            ? {\r\n                ...existInCart,\r\n                quantity: item.quantity + 1,\r\n              }\r\n            : item\r\n        )\r\n      );\r\n      let num = numberOfItems;\r\n      setNumberOfItems(num + 1);\r\n    } else {\r\n      setCart([...cart, { ...newItemInCart[0], quantity: 1 }]);\r\n      let num = numberOfItems;\r\n      setNumberOfItems(num + 1);\r\n    }\r\n  };\r\n\r\n  //Smanji količinu proizvoda iz košarice\r\n  const onReduceFromCart = (name: string) => {\r\n    const existInCart: any = cart.find((item: any) => item.name === name);\r\n    if (existInCart.quantity === 1) {\r\n      setCart(cart.filter((item: any) => item.name !== name));\r\n    } else {\r\n      setCart(\r\n        cart.map((item: any) =>\r\n          item.name === name\r\n            ? {\r\n                ...existInCart,\r\n                quantity: item.quantity - 1,\r\n              }\r\n            : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  //Obriši proizvod iz košarice\r\n  const onRemoveFromCart = (name: string) => {\r\n    setCart(cart.filter((item: any) => item.name !== name));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Shop\">\r\n      <div className=\"Shop-container\">\r\n        <Menu numberOfItems={numberOfItems} />\r\n        <Switch>\r\n          <Route\r\n            path=\"/cart\"\r\n            component={() => (\r\n              <Cart\r\n                cart={cart}\r\n                onAddToCart={onAddToCart}\r\n                onReduceFromCart={onReduceFromCart}\r\n                onRemoveFromCart={onRemoveFromCart}\r\n                promotions={promotions}\r\n                setNumberOfItems={setNumberOfItems}\r\n                approvedCode={approvedCode}\r\n                setApprovedCode={setApprovedCode}\r\n                total={total}\r\n                setTotal={setTotal}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={() => (\r\n              <HomePage items={items} onAddToCart={onAddToCart} cart={cart} />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/checkout\"\r\n            component={() => (\r\n              <Checkout\r\n                name={name}\r\n                setName={setName}\r\n                email={email}\r\n                setEmail={setEmail}\r\n                adress={adress}\r\n                setAdress={setAdress}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/order\"\r\n            component={() => (\r\n              <Order\r\n                cart={cart}\r\n                total={total}\r\n                name={name}\r\n                email={email}\r\n                adress={adress}\r\n                approvedCode={approvedCode}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Menu.tsx",[],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Cart.tsx",["61","62","63"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CartItem from '../smaller components/CartItem';\r\nimport Summary from '../smaller components/Summary';\r\nimport './Cart.scss';\r\n\r\ninterface Props {\r\n  cart: any[];\r\n  promotions: any;\r\n  total: string;\r\n  approvedCode: any;\r\n  setTotal: (str: any) => void;\r\n  setApprovedCode: (str: any) => void;\r\n  onAddToCart: (name: string) => void;\r\n  onReduceFromCart: (name: string) => void;\r\n  onRemoveFromCart: (name: string) => void;\r\n  setNumberOfItems: (num: number) => void;\r\n}\r\n\r\ninterface Item {\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  quantity?: number;\r\n}\r\n\r\nconst Cart: React.FC<Props> = ({\r\n  cart,\r\n  promotions,\r\n  approvedCode,\r\n  total,\r\n  setTotal,\r\n  setApprovedCode,\r\n  onAddToCart,\r\n  onReduceFromCart,\r\n  onRemoveFromCart,\r\n  setNumberOfItems,\r\n}) => {\r\n  const [promoCode, setPromoCode] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [motionQuantity, setMotionQuantity] = useState(false);\r\n  const [smokeQuantity, setSmokeQuantity] = useState(false);\r\n  useEffect(() => {\r\n    calculateTotalPrice();\r\n  });\r\n\r\n  const calculateTotalPrice = () => {\r\n    let totalPrice: number = 0;\r\n    if (cart.length === 0) {\r\n      totalPrice = 0;\r\n    }\r\n    if (cart.length === 1) {\r\n      if (cart[0].name === 'Motion Sensor') {\r\n        if (cart[0].quantity > 2) {\r\n          setMotionQuantity(true);\r\n          if (cart[0].quantity % 3 === 0) {\r\n            totalPrice = (cart[0].quantity / 3) * 65;\r\n          } else if (cart[0].quantity % 3 === 1) {\r\n            totalPrice = ((cart[0].quantity - 1) / 3) * 65 + 24.99;\r\n          } else {\r\n            totalPrice = ((cart[0].quantity - 2) / 3) * 65 + 24.99 + 24.99;\r\n          }\r\n        } else {\r\n          totalPrice = cart[0].price * cart[0].quantity;\r\n        }\r\n      } else {\r\n        totalPrice = cart[0].price * cart[0].quantity;\r\n      }\r\n      if (cart[0].name === 'Smoke Sensor') {\r\n        if (cart[0].quantity > 1) {\r\n          setSmokeQuantity(true);\r\n          if (cart[0].quantity % 2 === 0) {\r\n            totalPrice = (cart[0].quantity / 2) * 35;\r\n          } else {\r\n            totalPrice = ((cart[0].quantity - 1) / 2) * 35 + 19.99;\r\n          }\r\n        } else {\r\n          totalPrice = cart[0].price * cart[0].quantity;\r\n        }\r\n      }\r\n    }\r\n    if (cart.length > 1) {\r\n      let sum = 0;\r\n      let motion = cart.find((item: any) => item.name === 'Motion Sensor');\r\n      let smoke = cart.find((item: any) => item.name === 'Smoke Sensor');\r\n      for (let item of cart) {\r\n        if (item.name === 'Motion Sensor') {\r\n          if (item.quantity > 2) {\r\n            setMotionQuantity(true);\r\n            if (item.quantity % 3 === 0) {\r\n              sum += (item.quantity / 3) * 65;\r\n            } else if (item.quantity % 3 === 1) {\r\n              sum += ((item.quantity - 1) / 3) * 65 + 24.99;\r\n            } else {\r\n              sum += ((item.quantity - 2) / 3) * 65 + 24.99 + 24.99;\r\n            }\r\n          } else {\r\n            sum += item.price * item.quantity;\r\n          }\r\n        } else if (item.name === 'Smoke Sensor') {\r\n          if (item.quantity > 1) {\r\n            setSmokeQuantity(true);\r\n            if (item.quantity % 2 === 0) {\r\n              sum += (item.quantity / 2) * 35;\r\n            } else {\r\n              sum += ((item.quantity - 1) / 2) * 35 + 19.99;\r\n            }\r\n          } else {\r\n            sum += item.price;\r\n          }\r\n        } else {\r\n          sum += item.price * item.quantity;\r\n        }\r\n      }\r\n      totalPrice = sum;\r\n    }\r\n\r\n    const code20percent = approvedCode.find(\r\n      (item: any) => item.code === '20%OFF'\r\n    );\r\n    const code5percent = approvedCode.find(\r\n      (item: any) => item.code === '5%OFF'\r\n    );\r\n    const code20euro = approvedCode.find(\r\n      (item: any) => item.code === '20EUROFF'\r\n    );\r\n    if (code20percent) {\r\n      totalPrice *= 0.8;\r\n    }\r\n    if (code5percent) {\r\n      totalPrice *= 0.95;\r\n    }\r\n    if (code20euro) {\r\n      totalPrice -= 20;\r\n    }\r\n    let fixedToTwo = totalPrice.toFixed(2);\r\n    setTotal(fixedToTwo);\r\n  };\r\n\r\n  const applyPromoCode = () => {\r\n    setError('');\r\n    const matching = promotions.find((item: any) => item.code === promoCode);\r\n\r\n    if (matching) {\r\n      if (approvedCode.find((code: any) => code.code === matching.code)) {\r\n        setError('Cannot add same coupon or 20%OFF with this coupons');\r\n      } else {\r\n        if (matching.code === '20%OFF') {\r\n          if (approvedCode.length === 0) {\r\n            setPromoCode('');\r\n            setApprovedCode([{ ...matching }]);\r\n          } else {\r\n            setError(\r\n              'Coupon 20%OFF cannot be used in conjunction with other codes'\r\n            );\r\n          }\r\n        } else {\r\n          if (approvedCode.length === 0) {\r\n            setPromoCode('');\r\n            setApprovedCode([{ ...matching }]);\r\n          } else {\r\n            if (approvedCode[0].code !== '20%OFF') {\r\n              setPromoCode('');\r\n              let mergeCodes = [...approvedCode, { ...matching }];\r\n              setApprovedCode(mergeCodes);\r\n            } else {\r\n              setError(\r\n                'Coupon cannot be used in conjunction with 20%OFF coupon'\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      setError('Wrong code');\r\n    }\r\n    setPromoCode('');\r\n  };\r\n\r\n  //Obriši promo code\r\n  const deletePromoCode = (code: string) => {\r\n    const matching = approvedCode.filter((item: any) => item.code !== code);\r\n    if (matching) {\r\n      setApprovedCode(matching);\r\n    }\r\n    setError('');\r\n  };\r\n\r\n  if (cart.length > 0) {\r\n    if (cart.length === 1) {\r\n      setNumberOfItems(cart[0].quantity);\r\n    } else {\r\n      let totalItems = 0;\r\n      for (let item of cart) totalItems += item.quantity;\r\n      setNumberOfItems(totalItems);\r\n    }\r\n  } else {\r\n    setNumberOfItems(0);\r\n  }\r\n\r\n  const openValidator = () => {\r\n    var x: any = document.getElementById('Validator');\r\n    x.style.display = 'block';\r\n  };\r\n  const closeValidator = () => {\r\n    var x: any = document.getElementById('Validator');\r\n    x.style.display = 'none';\r\n  };\r\n\r\n  return (\r\n    <div className=\"Cart\">\r\n      <div className=\"Cart-items\">\r\n        {cart.length === 0 ? <h3>Cart Is Empty</h3> : <h3>Cart Items</h3>}\r\n        {cart.map((item: any) => {\r\n          return (\r\n            <CartItem\r\n              key={item.name}\r\n              item={item}\r\n              onReduceFromCart={onReduceFromCart}\r\n              onAddToCart={onAddToCart}\r\n              deletePromoCode={deletePromoCode}\r\n              onRemoveFromCart={onRemoveFromCart}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {cart.length > 0 ? (\r\n        <div className=\"Summary-wrapper\">\r\n          <Summary\r\n            total={total}\r\n            promoCode={promoCode}\r\n            setPromoCode={setPromoCode}\r\n            applyPromoCode={applyPromoCode}\r\n            error={error}\r\n            deletePromoCode={deletePromoCode}\r\n            approvedCode={approvedCode}\r\n            motionQuantity={motionQuantity}\r\n            smokeQuantity={smokeQuantity}\r\n          />\r\n          <button className=\"Cart-checkout\" onClick={() => openValidator()}>\r\n            CKECKOUT\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"Validator\" id=\"Validator\">\r\n        <p>DO YOU WANT TO CHECKOUT</p>\r\n        <ul>\r\n          <Link to=\"/checkout\">\r\n            <li>YES</li>\r\n          </Link>\r\n          <li onClick={() => closeValidator()}>NO</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\HomePage.tsx",["64"],"import React from 'react';\r\nimport Item from '../smaller components/Item';\r\n\r\nimport './HomePage.scss';\r\n\r\ninterface Props {\r\n  onAddToCart: (name: string) => void;\r\n  items: any;\r\n  cart: any;\r\n}\r\n\r\nconst HomePage: React.FC<Props> = ({ onAddToCart, items, cart }) => {\r\n  const i: any = [];\r\n  const Items = Object.keys(items).forEach((ir: any) => {\r\n    i.push(items[ir]);\r\n  });\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <h3>Products</h3>\r\n      {i.map((item: any) => (\r\n        <Item\r\n          name={item.name}\r\n          price={item.price}\r\n          img={item.image}\r\n          onAddToCart={onAddToCart}\r\n          key={item.name}\r\n          cart={cart}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Footer.tsx",[],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\firebase\\fire.tsx",[],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Item.tsx",["65"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './Item.scss';\r\n\r\ninterface Props {\r\n  name: string;\r\n  price: number;\r\n  img: string;\r\n  cart: any;\r\n  onAddToCart: (name: string) => void;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({ name, price, img, cart, onAddToCart }) => {\r\n  const exist = cart.find((item: any) => item.name === name);\r\n\r\n  return (\r\n    <div className=\"Item\">\r\n      <img src={img} alt={`${name} image`} />\r\n      <p className=\"Item-field\">{name}</p>\r\n      <p className=\"Item-field\">{`${price} $`}</p>\r\n      <Button\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        onClick={() => onAddToCart(name)}\r\n        className=\"Item-field\"\r\n      >\r\n        {exist\r\n          ? exist.name === name\r\n            ? 'In cart / Add more'\r\n            : 'Add to cart'\r\n          : 'Add to cart'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\CartItem.tsx",[],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\smaller components\\Summary.tsx",[],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Order.tsx",[],"C:\\Users\\Ivan\\Desktop\\checkout\\src\\components\\pages\\Checkout.jsx",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":29,"column":10,"nodeType":"74","messageId":"75","endLine":29,"endColumn":19},{"ruleId":"72","severity":1,"message":"76","line":29,"column":21,"nodeType":"74","messageId":"75","endLine":29,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":58,"column":6,"nodeType":"79","endLine":58,"endColumn":8,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"81","line":20,"column":11,"nodeType":"74","messageId":"75","endLine":20,"endColumn":15},{"ruleId":"72","severity":1,"message":"82","line":84,"column":11,"nodeType":"74","messageId":"75","endLine":84,"endColumn":17},{"ruleId":"72","severity":1,"message":"83","line":85,"column":11,"nodeType":"74","messageId":"75","endLine":85,"endColumn":16},{"ruleId":"72","severity":1,"message":"84","line":14,"column":9,"nodeType":"74","messageId":"75","endLine":14,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":18,"column":7,"nodeType":"87","endLine":18,"endColumn":46},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'buyerInfo' is assigned a value but never used.","Identifier","unusedVar","'setBuyerInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'itemsRef' and 'promotionsRef'. Either include them or remove the dependency array.","ArrayExpression",["90"],"'Item' is defined but never used.","'motion' is assigned a value but never used.","'smoke' is assigned a value but never used.","'Items' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [itemsRef, promotionsRef]",{"range":"93","text":"94"},[2016,2018],"[itemsRef, promotionsRef]"]